# This Dockerfile makes the "dev box": a container focusing
# on fast builds, responsiveness and multi-architecture support.
# This is meant to be used as a base to run development tools locally.

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

COPY locale.gen /etc/locale.gen
COPY profile /etc/profile

ENV LANGUAGE="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    LC_CTYPE="en_US.UTF-8" \
    DEBIAN_FRONTEND="noninteractive"

# Install packages.
RUN apt-get update -y --fix-missing && \
    apt-get -q -y upgrade && \
    apt-get install -q -y --no-install-recommends \
        curl \
        build-essential \
        ca-certificates \
        unzip \
        clang-10 \
        clang-format-10 \
        locales \
        git && \
    dpkg-reconfigure locales && \
    apt-get -y clean && \
    rm -rf /var/lib/apt/lists/*

# Install Go.
ARG RUNTIME
ARG RUNTIME_ARCH
RUN mkdir -p /opt && cd /opt && curl https://storage.googleapis.com/golang/$RUNTIME.linux-$RUNTIME_ARCH.tar.gz | tar xz && \
    mkdir -p /go/src/github.com/gravitational/teleport && \
    chmod a+w /go && \
    chmod a+w /var/lib && \
    chmod a-w /

ENV GOPATH="/go" \
    GOROOT="/opt/go" \
    PATH="$PATH:/opt/go/bin:/go/bin:/go/src/github.com/gravitational/teleport/build"

ARG PROTOC_VER
ARG PROTOC_PLATFORM
ARG GOGO_PROTO_TAG

ENV PROTOC_TARBALL protoc-${PROTOC_VER}-${PROTOC_PLATFORM}.zip
ENV GOGOPROTO_ROOT ${GOPATH}/src/github.com/gogo/protobuf

RUN (curl -L -o /tmp/${PROTOC_TARBALL} https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VER}/${PROTOC_TARBALL} && \
     cd /tmp && unzip /tmp/${PROTOC_TARBALL} -d /usr/local && \
     chmod -R a+r /usr/local/include/google/protobuf && \
     rm /tmp/${PROTOC_TARBALL})
RUN (git clone https://github.com/gogo/protobuf.git ${GOPATH}/src/github.com/gogo/protobuf && \
     cd ${GOPATH}/src/github.com/gogo/protobuf && \
     git reset --hard ${GOGO_PROTO_TAG} && \
     make install)

# Install buf
RUN BIN="/usr/local/bin" && \
    VERSION="1.0.0-rc1" && \
    BINARY_NAME="buf" && \
    curl -sSL \
     "https://github.com/bufbuild/buf/releases/download/v${VERSION}/${BINARY_NAME}-$(uname -s)-$(uname -m)" \
    -o "${BIN}/${BINARY_NAME}" && \
    chmod +x "${BIN}/${BINARY_NAME}"

# Install node
ARG NODE_VERSION=v15.14.0
ENV NODE_URL="https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.xz"
ENV NODE_PATH="/usr/local/lib/node-${NODE_VERSION}-linux-x64"
ENV PATH="$PATH:${NODE_PATH}/bin"
RUN (curl -o /tmp/nodejs.tar.xz -L ${NODE_URL} && tar -xJf /tmp/nodejs.tar.xz -C /usr/local/lib)

# Install js proto tools
RUN (npm install --global grpc-tools@1.11.2)
RUN (npm install --global grpc_tools_node_protoc_ts@5.0.1)

RUN go install github.com/golang/protobuf/protoc-gen-go@v1.4.3

# Note: protoc reads the proto files from /vendor/.../teleport/api/vX rather than
# /api because protoc does not understand go modules, and reads vX as a directory.
ENV PROTO_INCLUDE "/usr/local/include":"/go/src/github.com/gravitational/teleport/vendor":"/go/src/github.com/gogo/protobuf/protobuf":"${GOGOPROTO_ROOT}":"${GOGOPROTO_ROOT}/protobuf"

USER root
VOLUME ["/go/src/github.com/gravitational/teleport"]
